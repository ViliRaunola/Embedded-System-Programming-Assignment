/*

 * utilities.c
 *
 *  Created on: 12 Dec 2023
 *      Author: vraun
 */

/* FreeRTOS includes. */
#include "FreeRTOS.h"
#include "task.h"
#include "semphr.h"

/* LUT includes. */
#include "zynq_registers.h"
#include <xuartps_hw.h>

#include "utilities.h"

extern SemaphoreHandle_t modeSemaphore;
extern float gKi;
extern float gKp;


// Send one character through UART interface
void uart_send(char c) {
	while (UART_STATUS & XUARTPS_SR_TNFUL);
	UART_FIFO = c;
	while (UART_STATUS & XUARTPS_SR_TACTIVE);
}

// Send string (character array) through UART interface
void uartSendString(char str[BUFFER_SIZE]) {
	char *ptr = str;
	// While the string still continues.
	while (*ptr != '\0') {
		uart_send(*ptr);
		ptr++;
	}
}

// Check if UART receive FIFO is not empty and return the new data
char uart_receive()
{
 if ((UART_STATUS & XUARTPS_SR_RXEMPTY) == XUARTPS_SR_RXEMPTY) return 0;
 return UART_FIFO;
}

void handleTaskExit()
{
	AXI_LED_DATA = 0b0000;
	printMenu();
	xSemaphoreGive(modeSemaphore);
	vTaskDelete(NULL);
}


// Source: https://support.xilinx.com/s/question/0D52E00006hpTYOSA2/how-to-print-float-value-on-hyperterminal-using-xilprintf?language=en_US
void floatToIntPrint(float fval) {
	int whole, thousandths;
	whole = fval;
	thousandths = abs(round((fval - whole) * 1000));
	if(thousandths == 1000) {
		if(fval < 0) {
			whole--;
		} else {
			whole++;
		}
		thousandths = 0;
	}
	if(whole == 0 && fval < 0 && thousandths != 0) {
		xil_printf("-%d.%03d", whole, thousandths);
	} else {
		xil_printf("%d.%03d", whole, thousandths);
	}
}

char* uartReceiveString(){
	static int index = 0;
	static char rx_buf[BUFFER_SIZE];
	char input = uart_receive();

	// If an UART message was received.
	if (input != 0){
		// Depending on the serial terminal used, UART messages can be terminated
		// by either carriage return '\r' or line feed '\n'.
		if (input == '\r' || input == '\n'){
			rx_buf[index] = '\0';
			index = 0;
			return rx_buf;
		}
		else {
			rx_buf[index] = input;
			index++;
		}
	}
	return 0;
}

void printMenu()
{
    xil_printf("\n################################## MAIN MENU ##################################\n");
	xil_printf("Select a mode by pressing the 1. button on the board or by typing a number 1-3.\n");
	xil_printf("###############################################################################\n\n");
	xil_printf("Select Mode:\n1. Configuration Mode\n2. Idling Mode\n3. Modulating mode\n\n");

}
